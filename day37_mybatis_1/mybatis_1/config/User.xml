<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper    
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"    
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
		
<!-- 命名空间 , 对statement的信息进行分类管理 -->
<!-- 注意：在mapper代理时，它具有非常重要的作用 -->
<mapper namespace="test">

	<!-- 根据用户Id查询用户信息 -->
	<!-- select: 表示一个MapStatement对象 -->
	<!-- id：statement的唯一标识 -->
	<!-- #{}：表示一个占位符?  -->
	<!-- #{id}：里面的id表示输入参数的名称,如果该参数是简单类型,那么#{}里的参数名称可以任意 -->
	<!-- parameterType：输入参数的java类型 -->
	<!-- resultType：输出结果所映射的java类型(单条结果所对应的java类型) -->
	<select id="findUserById" parameterType="int" resultType="cn.gxc.entity.User">
		SELECT * FROM USER WHERE id = #{id}
	</select>
	
	
	<!-- 根据用户名称模糊查询用户信息 -->
	<!-- ${}：表示sql的连接符 -->
	<!-- #{value}：里面的value表示输入参数的名称,如果该参数是简单类型,那么${}里的参数名称必须是value -->
	<!-- ${}：这种方法存在sql注入风险，但在某些方法必须使用${},比如排序,动态传入排序的列名, ${}会原样输出,不加解释 -->
	<select id="findUserByName" parameterType="java.lang.String" resultType="cn.gxc.entity.User">
		<!-- SELECT * FROM USER WHERE username like #{name}; -->
		SELECT * FROM USER WHERE username like '%${value}%'
	</select>
	
	
	<!-- 添加用户 -->
	<insert id="insertUser" parameterType="cn.gxc.entity.User">
		<!-- selectKey：查询主键，在标签内输入查询主键的sql
				order：指定查询主键的sql和insert语句的执行顺序,相对insert语句
				LAST_INSERT_ID()：该函数是mysql的函数,获取自增主键的id，必须配合insert语句一起使用
		 -->
		<selectKey keyProperty="id" resultType="int" order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
		
		insert into user(username,birthday,sex,address) 
		values(#{username},#{birthday},#{sex},#{address})
 	</insert>
 	
 	<!-- 自增主键之UUID 
 	<insert id="insertUser" parameterType="cn.gxc.entity.User">
 		<selectKey keyProperty="id" resultType="string" order="BEFORE">
			SELECT UUID()
		</selectKey>
 		insert into user(id,username,birthday,sex,address) 
		values(#{id},#{username},#{birthday},#{sex},#{address})'
	</insert>
 	-->

	<!-- 自增主键之Oracel序列
 	<insert id="insertUser" parameterType="cn.gxc.entity.User">
 		<selectKey keyProperty="id" resultType="int" order="BEFORE">
			SELECT seq.nextval from dual
		</selectKey>
 		insert into user(id,username,birthday,sex,address) 
		values(#{id},#{username},#{birthday},#{sex},#{address})'
	</insert>
 	-->

	
</mapper>


































